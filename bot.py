import requests
import datetime
from config import bot_token, open_weather_token
from aiogram import Bot,types, executor
from aiogram.dispatcher import Dispatcher
from aiogram.utils import executor
import os
from aiogram.dispatcher.filters import Text


bot = Bot(token=bot_token)
dp = Dispatcher(bot)

@dp.message_handler(commands=['start'])
async def start_command(message: types.Message):
    start_buttons = ['üå• –ü–æ–≥–æ–¥–∞']
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
    keyboard.add(*start_buttons)
    await message.answer('–í—ã–±–µ—Ä–∏—Ç–µ –∫–Ω–æ–ø–∫—É', reply_markup=keyboard)

    #await message.reply("Wassup, –Ω–∞–ø–∏—à–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞ –∏ —è —Ç–µ–±–µ —Å–∫–∞–∂—É —Ç–æ—á–Ω—ã–π –ø—Ä–æ–≥–Ω–æ–∑ –ø–æ–≥–æ–¥—ã")

@dp.message_handler(Text(equals='üå• –ü–æ–≥–æ–¥–∞'))
async def wait_weather(message: types.Message):
    await message.reply('–Ω–∞–ø–∏—à–∏—Ç–µ –≥–æ—Ä–æ–¥, –≤ –∫–æ—Ç–æ—Ä–æ–º —Ö–æ—Ç–µ–ª–∏ –±—ã —É–∑–Ω–∞—Ç—å –ø—Ä–æ–≥–Ω–æ–∑ –ø–æ–≥–æ–¥—ã: ') 
    get_weather()

@dp.message_handler()
async def get_weather(message: types.Message):
    
    try:
        r = requests.get(
            f'http://api.openweathermap.org/data/2.5/weather?q={message.text}&appid={open_weather_token}&units=metric'
        )
        data = r.json()
        

        city = data['name']
        cur_weather = data['main']['temp']
        humidity = data['main']['humidity']
        pressure = data['main']['pressure']
        wind = data['wind']['speed']
        sunrise_time = datetime.datetime.fromtimestamp(data['sys']['sunrise'])
        sunset_time = datetime.datetime.fromtimestamp(data['sys']['sunset'])


        await message.reply(f"–ø–æ–≥–æ–¥–∞ –≤ –≥–æ—Ä–æ–¥–µ : {city} \n —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {cur_weather}\n"
                f"–≤–ª–∞–∂–Ω–æ—Å—Ç—å : {humidity}\n –¥–∞–≤–ª–µ–Ω–∏–µ : {pressure} –º–º.—Ä—Ç.—Å—Ç\n"
                f"–≤–µ—Ç–µ—Ä : {wind}\n –≤—Ä–µ–º—è –≤–æ—Å—Ö–æ–¥–∞ —Å–æ–ª–Ω—Ü–∞ : {sunrise_time}\n"
                f"–∑–∞–∫–∞—Ç : {sunset_time}"
                )

    except:
          
        await message.reply('–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –≤–≤–æ–¥ –≥–æ—Ä–æ–¥–∞')


if __name__ == '__main__':
    executor.start_polling(dp)